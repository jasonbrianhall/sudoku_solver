name: Build Sudoku

on:
  push:
    branches: [ master,dev ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write # Required for creating releases
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1
      
    - name: Setup Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Python dependencies
      working-directory: python_generate_puzzles
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build C++ Solution
      run: |
        msbuild /p:Configuration=Release /p:Platform=x64 SudokuSolver.vcxproj

    - name: Copy C++ Build to Python Directory
      run: |
        copy x64\Release\SudokuSolver.dll python_generate_puzzles\sudoku_solver.pyd

    - name: Build Python Extension
      working-directory: python_generate_puzzles
      run: |
        python setup.py build_ext --inplace

    - name: Create PyInstaller Spec
      working-directory: python_generate_puzzles
      run: |
        echo # -*- mode: python ; coding: utf-8 -*-

        block_cipher = None

        a = Analysis(
            ['sudoku_game_qt5.py'],
            pathex=[],
            binaries=[],
            datas=[],
            hiddenimports=['PyQt5.sip'],
            hookspath=[],
            hooksconfig={},
            runtime_hooks=[],
            excludes=[],
            win_no_prefer_redirects=False,
            win_private_assemblies=False,
            cipher=block_cipher,
            noarchive=False,
        )

        # Add the compiled C++ extension
        a.binaries += [('sudoku_solver.pyd', './sudoku_solver.pyd', 'BINARY')]

        pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

        exe = EXE(
            pyz,
            a.scripts,
            a.binaries,
            a.zipfiles,
            a.datas,
            [],
            name='sudoku_solver_qt5_python',
            debug=False,
            bootloader_ignore_signals=False,
            strip=False,
            upx=True,
            upx_exclude=[],
            runtime_tmpdir=None,
            console=False,
            disable_windowed_traceback=False,
            target_arch=None,
            codesign_identity=None,
            entitlements_file=None,
        ) > sudoku.spec

    - name: Build Python Executable
      working-directory: python_generate_puzzles
      run: |
        pyinstaller --clean sudoku.spec

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          x64/Release/SudokuSolver.exe
          python_generate_puzzles/dist/sudoku_solver_qt5_python.exe
        tag_name: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          Automated release from CI build
          Commit: ${{ github.sha }}
          Build number: ${{ github.run_number }}

    - name: Create Dev Build
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      id: create_dev_build
      uses: softprops/action-gh-release@v1
      with:
        files: |
          x64/Release/SudokuSolver.exe
          python_generate_puzzles/dist/sudoku_solver_qt5_python.exe
        tag_name: bleedingedge-v${{ github.run_number }}
        name: Dev Build ${{ github.run_number }}
        draft: false
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          Development build
          Commit: ${{ github.sha }}
          Build number: ${{ github.run_number }}
